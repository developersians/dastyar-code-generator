using Arzfy.Domain;
using Ddd.Kernel.Domain;
using MediatR;

namespace Arzfy.Application;

internal sealed class Get{{ PascalCase }}ByIdQueryHandler(I{{ PascalCase }}Repository {{ CamelCase }}Repository)
    : IRequestHandler<Get{{ PascalCase }}ByIdQuery, Result<{{ PascalCase }}Response>>
{
    public async Task<Result<{{ PascalCase }}Response>> Handle(Get{{ PascalCase }}ByIdQuery query, CancellationToken cancellationToken)
    {
        {{ OriginalName }}? result = await {{ CamelCase }}Repository.GetAsync(
            predicate: x => x.ID == query.Id,
            includes: null,
            cancellationToken: cancellationToken);

        if (result == null)
            return Result<{{ PascalCase }}Response>.Failure({{ PascalCase }}Errors.NotFound(query.Id));

        return Result<{{ PascalCase }}Response>.Success(result.To{{ PascalCase }}Response());
    }
}
